worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # DNS resolver
    resolver 8.8.8.8 8.8.4.4 valid=300s ipv6=off;
    resolver_timeout 30s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Main page
        location = / {
            root /usr/share/nginx/html;
            index index.html;
        }
        
        # ChatGPT proxy
        location /chatgpt {
            # Remove /chatgpt prefix
            rewrite ^/chatgpt(.*) $1 break;
            
            # Proxy to ChatGPT
            proxy_pass https://chatgpt.com;
            
            # Essential headers
            proxy_set_header Host chatgpt.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header User-Agent "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36";
            proxy_set_header Accept "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
            proxy_set_header Accept-Language "en-US,en;q=0.9";
            proxy_set_header Accept-Encoding "gzip, deflate, br";
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # SSL settings
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 16 8k;
            proxy_busy_buffers_size 16k;
            
            # Remove problematic headers
            proxy_hide_header X-Frame-Options;
            proxy_hide_header Content-Security-Policy;
            proxy_hide_header X-Content-Security-Policy;
            proxy_hide_header X-WebKit-CSP;
            
            # Handle redirects
            proxy_redirect https://chatgpt.com/ /chatgpt/;
            proxy_redirect http://chatgpt.com/ /chatgpt/;
        }
        
        # API proxy for ChatGPT API calls
        location /api {
            proxy_pass https://chatgpt.com/api;
            proxy_set_header Host chatgpt.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header User-Agent "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36";
            proxy_ssl_verify off;
            proxy_read_timeout 300s;
            proxy_hide_header X-Frame-Options;
            proxy_hide_header Content-Security-Policy;
        }
        
        # Health check endpoint
        location = /health {
            access_log off;
            return 200 "ChatGPT Proxy Status: HEALTHY\nTimestamp: $time_local\nServer: Railway.app";
            add_header Content-Type text/plain;
        }
        
        # Ping endpoint
        location = /ping {
            access_log off;
            return 200 "pong";
            add_header Content-Type text/plain;
        }
        
        # Robots.txt
        location = /robots.txt {
            return 200 "User-agent: *\nDisallow: /";
            add_header Content-Type text/plain;
        }
    }
    
    # WebSocket upgrade mapping
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
}